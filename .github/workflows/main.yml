on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

name: CI

jobs:
  wasi:
    name: Test WASI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust: [stable]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ matrix.rust }}
          targets: wasm32-wasi
      - name: Install wasmtime (not windows)
        if: matrix.os != 'windows-latest'
        run: |
          curl https://wasmtime.dev/install.sh -sSf | bash
          echo "$HOME/.wasmtime/bin" >> $GITHUB_PATH
      - name: Install wasmtime (windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl -LO https://github.com/bytecodealliance/wasmtime/releases/download/dev/wasmtime-dev-x86_64-windows.zip
          unzip wasmtime-dev-x86_64-windows.zip
          ls -l "$PWD/wasmtime-dev-x86_64-windows"
          echo "$PWD/wasmtime-dev-x86_64-windows" >> $GITHUB_PATH
          echo "$PATH"
          env "$PWD/wasmtime-dev-x86_64-windows/wasmtime" --help
          echo here we are
      - name: Help stuff (windows)
        if: matrix.os == 'windows-latest'
        run: echo "$PATH"
      - name: Help stuff (windows)
        if: matrix.os == 'windows-latest'
        run: env "$PWD/wasmtime-dev-x86_64-windows/wasmtime" --help
      - name: Test stuff (windows)
        if: matrix.os == 'windows-latest'
        run: env "CARGO_TARGET_WASM32_WASI_RUNNER=$PWD/wasmtime-dev-x86_64-windows/wasmtime" cargo run --verbose --target wasm32-wasi -- --dir=tmp
      - name: Help stuff
        run: env CARGO_TARGET_WASM32_WASI_RUNNER=wasmtime wasmtime --help
      - name: Test stuff
        run: env CARGO_TARGET_WASM32_WASI_RUNNER=wasmtime cargo run --verbose --target wasm32-wasi -- --dir=tmp
